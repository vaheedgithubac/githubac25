apiVersion: apps/v1
kind: Deployment
metadata:
  name: mysql
spec: 
  replicas: 1
  selector:
    matchLabels:
      db: mysql
      tier: db
  strategy:
    type: Recreate 

  template: 
    metadata: 
      labels: 
        db: mysql
        tier: db
    spec: 
      volumes:
      - name: mysql-init-db
        configMap:
          name: mysql-initdb-config

      containers:
        - name: mysql-cont
          image: mysql:8.0
          ports:
          - containerPort: 3306
            name: mysql 
          env:
          - name: MYSQL_ROOT_PASSWORD
            valueFrom:
              secretKeyRef:
                name: mysql-secret
                key: MYSQL_ROOT_PASSWORD 
          volumeMounts:
            - name: mysql-init-db
              mountPath: /docker-entrypoint-initdb.d/init.sql
              subPath: init.sql              # Mount only init.sql, not the entire ConfigMap
              
          startupProbe:
            exec:
              #command: ["/bin/sh", "-c", "sleep 10; until mysqladmin ping -h 127.0.0.1 -uroot -p'$MYSQL_ROOT_PASSWORD' --silent; do echo waiting for mysql; sleep 2; done"]
              #command: ['sh', '-c', 'sleep 10; until exit | mysql -h localhost -u root -p"$MYSQL_ROOT_PASSWORD"; do echo waiting for mysql; sleep 2; done']
              command: ['/bin/sh', '-c', 'until mysql -h 127.0.0.1 -uroot -p"$MYSQL_ROOT_PASSWORD" -e "select 1" ; do echo "waiting for mysql"; sleep 2; done']
            initialDelaySeconds: 45
            failureThreshold: 30   # Allows up to 5 minutes for MySQL startup (30 times * 10s)
            periodSeconds: 10      # Check every 10 seconds
            timeoutSeconds: 15     # Timeout if MySQL doesnt respond in 60 seconds

          livenessProbe:
            exec:
              command: ['sh', '-c', 'mysqladmin ping -h 127.0.0.1 -uroot -p"$MYSQL_ROOT_PASSWORD"']
            initialDelaySeconds: 15  
            periodSeconds: 10
            timeoutSeconds: 10
            failureThreshold: 3

          readinessProbe:
            exec:
              command: ['sh', '-c', 'mysqladmin ping -h 127.0.0.1 -uroot -p"$MYSQL_ROOT_PASSWORD"']
            initialDelaySeconds: 15  
            periodSeconds: 10
            timeoutSeconds: 10
            failureThreshold: 3

      
             
---
apiVersion: v1
kind: Service
metadata:
  name: mysql-svc
  labels:
    db: mysql
spec:
  #type: ClusterIP
  clusterIP: None # This means we are going to use Pod IP directly
  selector:
    db: mysql
    tier: db
  ports:
  - name: mysqldb-port
    protocol: "TCP"
    port: 3306
    targetPort: 3306  
