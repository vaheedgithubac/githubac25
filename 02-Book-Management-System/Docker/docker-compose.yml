# mvn clean package -f app-code
# docker build -t mysql-1 -f mysql-Dockerfile .
# docker build -t tomcat-1 -f tomcat-Dockerfile .
# docker compose up -d
# docker compose down


#version: "3.9" # no need, deprecated in modern docker compose

services:

  web-nginx:
    image: nginx:1.27.4
    container_name: book-nginx
    ports:
      - "80:80"  # NGINX listens on port 80 of the host
    depends_on:
      tomcat:
        condition: service_healthy
    networks:
      - book
    volumes:
      - ./book.conf:/etc/nginx/conf.d/book.conf:ro  # Custom NGINX configuration

  tomcat:
    image: tomcat-1
    container_name: book-tomcat
    ports:
      - "8080"
    depends_on:
      mysql:
        condition: service_healthy
    networks:
      - book
    healthcheck:
      #test: ["CMD-SHELL", "nc -z localhost 8080 || exit 1"] # To check only port 8080 is open or not
      #test: ["CMD", "curl", "-f", "http://localhost:8080/Bookstore"]  # "curl" is  Better than using "netstat", but "curl" should be present in tomcat image

      test: ["CMD-SHELL", "wget -q --spider http://localhost:8080/Bookstore || exit 1"]  # Works with tomcat-8.5-alpine image
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 15s

  mysql:
    image: mysql-1
    container_name: book-mysql
    environment:
      MYSQL_ROOT_PASSWORD: P@ssw0rd
    networks:
      - book
    volumes:
      - mydb:/var/lib/mysql
    healthcheck:
      #test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-uroot", "-pP@ssw0rd"]
      test: ["CMD-SHELL", "mysqladmin ping -h localhost -uroot -p$$MYSQL_ROOT_PASSWORD"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 15s

networks:
  book:
    driver: bridge

volumes:
  mydb:
    name: book-mysqldb-data-v1
